# Generated by Django 5.2.2 on 2025-07-29 07:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('admin_dashboard', '0001_initial'),
        ('dataset', '0003_dataset_file_size_mb_dataset_has_documentation_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('report_type', models.CharField(choices=[('user_analytics', 'User Analytics'), ('dataset_analytics', 'Dataset Analytics'), ('token_analytics', 'Token Analytics'), ('financial_report', 'Financial Report'), ('system_health', 'System Health'), ('security_audit', 'Security Audit'), ('api_usage', 'API Usage Report'), ('community_activity', 'Community Activity')], max_length=30)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='admin_reports/')),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('download_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='DatasetModerationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('needs_changes', 'Needs Changes')], default='pending', max_length=20)),
                ('reviewer_notes', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0, help_text='Higher numbers = higher priority')),
            ],
            options={
                'ordering': ['-priority', 'submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='TokenAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_type', models.CharField(choices=[('bonus', 'Bonus Award'), ('penalty', 'Penalty Deduction'), ('correction', 'Correction'), ('refund', 'Refund'), ('compensation', 'Compensation')], max_length=20)),
                ('amount', models.IntegerField(help_text='Positive for additions, negative for deductions')),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserModerationAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('warning', 'Warning'), ('suspension', 'Temporary Suspension'), ('ban', 'Permanent Ban'), ('verification_override', 'Verification Override'), ('premium_override', 'Premium Override'), ('profile_restriction', 'Profile Restriction'), ('api_restriction', 'API Restriction')], max_length=30)),
                ('reason', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='adminlog',
            name='affected_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_actions_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='adminlog',
            name='user_agent',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='adminnotification',
            name='action_label',
            field=models.CharField(blank=True, help_text='Label for action button', max_length=50),
        ),
        migrations.AddField(
            model_name='adminnotification',
            name='action_url',
            field=models.URLField(blank=True, help_text='URL for action button'),
        ),
        migrations.AddField(
            model_name='adminnotification',
            name='is_global',
            field=models.BooleanField(default=True, help_text='Show to all admin users'),
        ),
        migrations.AddField(
            model_name='adminnotification',
            name='target_admin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targeted_notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bulkaction',
            name='action_type',
            field=models.CharField(choices=[('user_bulk_update', 'User Bulk Update'), ('dataset_bulk_update', 'Dataset Bulk Update'), ('token_bulk_adjustment', 'Token Bulk Adjustment'), ('user_verification', 'User Verification'), ('dataset_moderation', 'Dataset Moderation'), ('api_key_management', 'API Key Management'), ('data_export', 'Data Export'), ('data_import', 'Data Import'), ('cleanup_operation', 'Cleanup Operation')], default='user_bulk_update', max_length=30),
        ),
        migrations.AddField(
            model_name='bulkaction',
            name='parameters',
            field=models.JSONField(blank=True, default=dict, help_text='Action parameters'),
        ),
        migrations.AddField(
            model_name='bulkaction',
            name='success_message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='dashboardsettings',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='dashboardsettings',
            name='setting_type',
            field=models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20),
        ),
        migrations.AddField(
            model_name='dashboardsettings',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='systemmetrics',
            name='category',
            field=models.CharField(choices=[('users', 'Users'), ('datasets', 'Datasets'), ('tokens', 'Tokens'), ('downloads', 'Downloads'), ('api', 'API Usage'), ('community', 'Community'), ('system', 'System'), ('financial', 'Financial')], default='system', max_length=20),
        ),
        migrations.AlterField(
            model_name='adminlog',
            name='action',
            field=models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('login', 'Login'), ('logout', 'Logout'), ('export', 'Export'), ('import', 'Import'), ('bulk_action', 'Bulk Action'), ('token_adjustment', 'Token Adjustment'), ('user_verification', 'User Verification'), ('premium_override', 'Premium Override'), ('api_key_management', 'API Key Management'), ('dataset_moderation', 'Dataset Moderation'), ('referral_management', 'Referral Management')], max_length=30),
        ),
        migrations.AlterField(
            model_name='adminnotification',
            name='notification_type',
            field=models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success'), ('system', 'System Alert'), ('security', 'Security Alert'), ('user_action', 'User Action Required')], default='info', max_length=20),
        ),
        migrations.AlterField(
            model_name='bulkaction',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
        migrations.AddIndex(
            model_name='adminlog',
            index=models.Index(fields=['affected_user', 'timestamp'], name='admin_dashb_affecte_a19338_idx'),
        ),
        migrations.AddIndex(
            model_name='adminnotification',
            index=models.Index(fields=['is_read', 'created_at'], name='admin_dashb_is_read_8ab807_idx'),
        ),
        migrations.AddIndex(
            model_name='adminnotification',
            index=models.Index(fields=['priority', 'created_at'], name='admin_dashb_priorit_695183_idx'),
        ),
        migrations.AddIndex(
            model_name='bulkaction',
            index=models.Index(fields=['status', 'started_at'], name='admin_dashb_status_832cd6_idx'),
        ),
        migrations.AddIndex(
            model_name='bulkaction',
            index=models.Index(fields=['action_type', 'started_at'], name='admin_dashb_action__ddcb9b_idx'),
        ),
        migrations.AddIndex(
            model_name='systemmetrics',
            index=models.Index(fields=['category', 'timestamp'], name='admin_dashb_categor_39221a_idx'),
        ),
        migrations.AddField(
            model_name='adminreport',
            name='generated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datasetmoderationqueue',
            name='dataset',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_queue', to='dataset.dataset'),
        ),
        migrations.AddField(
            model_name='datasetmoderationqueue',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_datasets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tokenadjustment',
            name='admin_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='token_adjustments_made', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tokenadjustment',
            name='reference_dataset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_adjustments', to='dataset.dataset'),
        ),
        migrations.AddField(
            model_name='tokenadjustment',
            name='target_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='token_adjustments_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usermoderationaction',
            name='admin_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions_taken', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usermoderationaction',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_moderation_actions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usermoderationaction',
            name='target_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='adminreport',
            index=models.Index(fields=['report_type', 'generated_at'], name='admin_dashb_report__658713_idx'),
        ),
        migrations.AddIndex(
            model_name='adminreport',
            index=models.Index(fields=['generated_by', 'generated_at'], name='admin_dashb_generat_6e3c1e_idx'),
        ),
        migrations.AddIndex(
            model_name='datasetmoderationqueue',
            index=models.Index(fields=['status', 'submitted_at'], name='admin_dashb_status_f757eb_idx'),
        ),
        migrations.AddIndex(
            model_name='datasetmoderationqueue',
            index=models.Index(fields=['priority', 'submitted_at'], name='admin_dashb_priorit_e3fc88_idx'),
        ),
        migrations.AddIndex(
            model_name='tokenadjustment',
            index=models.Index(fields=['target_user', 'created_at'], name='admin_dashb_target__b736bf_idx'),
        ),
        migrations.AddIndex(
            model_name='tokenadjustment',
            index=models.Index(fields=['adjustment_type', 'created_at'], name='admin_dashb_adjustm_895f9a_idx'),
        ),
        migrations.AddIndex(
            model_name='usermoderationaction',
            index=models.Index(fields=['target_user', 'is_active'], name='admin_dashb_target__e66f4c_idx'),
        ),
        migrations.AddIndex(
            model_name='usermoderationaction',
            index=models.Index(fields=['action_type', 'created_at'], name='admin_dashb_action__01ef6a_idx'),
        ),
    ]
